{"version":3,"file":"uint64.js","sourceRoot":"","sources":["../../../src/utils/uint64.ts"],"names":[],"mappings":";;AAAA,wCAA0C;AAE1C,IAAM,oBAAoB,GAAG,WAAW,CAAA;AAE3B,QAAA,kBAAkB,GAAG,UAAC,GAAa;IACtC,IAAA,WAAE,EAAE,WAAE,CAAQ;IACtB,IAAM,MAAM,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;IACpE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;AAC5B,CAAC,CAAA;AAEY,QAAA,kBAAkB,GAAG,UAAC,GAAW;IAC5C,IAAM,MAAM,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAA;IACjC,MAAM,CAAC;QACL,MAAM,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC,QAAQ,EAAE;QAC1D,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,QAAQ,EAAE;KAC/C,CAAA;AACH,CAAC,CAAA","sourcesContent":["import BigNumber = require('bignumber.js')\n\nconst HIGH_WORD_MULTIPLIER = 0x100000000\n\nexport const twoNumbersToString = (num: number[]) => {\n  const [ hi, lo ] = num\n  const uint64 = new BigNumber(hi).times(HIGH_WORD_MULTIPLIER).add(lo)\n  return uint64.toString(10)\n}\n\nexport const stringToTwoNumbers = (num: string) => {\n  const uint64 = new BigNumber(num)\n  return [\n    uint64.dividedToIntegerBy(HIGH_WORD_MULTIPLIER).toNumber(),\n    uint64.modulo(HIGH_WORD_MULTIPLIER).toNumber()\n  ]\n}\n"]}